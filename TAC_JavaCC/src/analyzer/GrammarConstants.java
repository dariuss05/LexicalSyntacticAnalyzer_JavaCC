/* Generated By:JavaCC: Do not edit this line. GrammarConstants.java */
package analyzer;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CONSTANT = 5;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 6;
  /** RegularExpression Id. */
  int EXPONENT = 7;
  /** RegularExpression Id. */
  int DIGIT = 8;
  /** RegularExpression Id. */
  int LESS_THAN_OR_EQUAL = 9;
  /** RegularExpression Id. */
  int GREATER_THAN_OR_EQUAL = 10;
  /** RegularExpression Id. */
  int EQUAL_EQUALS = 11;
  /** RegularExpression Id. */
  int EQUAL = 12;
  /** RegularExpression Id. */
  int NOT_EQUAL = 13;
  /** RegularExpression Id. */
  int LESS_THAN = 14;
  /** RegularExpression Id. */
  int GREATER_THAN = 15;
  /** RegularExpression Id. */
  int PLUS = 16;
  /** RegularExpression Id. */
  int MINUS = 17;
  /** RegularExpression Id. */
  int MULTIPLY = 18;
  /** RegularExpression Id. */
  int DIVIDE = 19;
  /** RegularExpression Id. */
  int LPAREN = 20;
  /** RegularExpression Id. */
  int RPAREN = 21;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<CONSTANT>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<DIGIT>",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"=\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\";\"",
  };

}
